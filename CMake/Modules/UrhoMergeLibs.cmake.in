#
# Copyright (c) 2008-2017 the Urho3D project.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

set (ARCHIVES "@ARCHIVES@")
set (URHO3D_TARGET_FILE "$<TARGET_FILE:Urho3D>")

if (APPLE)
    # Apple libtool takes archives directly as input
    execute_process (
        COMMAND mv ${URHO3D_TARGET_FILE}{,.engine}
        COMMAND libtool -static ${URHO3D_TARGET_FILE}.engine ${ARCHIVES} -o ${URHO3D_TARGET_FILE}
        COMMAND rm ${URHO3D_TARGET_FILE}.engine
     )
elseif (EMSCRIPTEN OR CMAKE_BINARY_DIR MATCHES "[ +*;,]")
    # Do it the hard way by first extracting the object (bitcode) files and appending them to final archive:
    # a) For Emscripten build as Emscripten emar (llvm-ar) neither takes archives directly as input nor supports MRI-style script
    # b) When the build tree path contains special characters for MRI scripts (space, '+', '*', ';', ',') as escaping is not supported
    get_filename_component (AR ${CMAKE_AR} NAME_WE)
    if (CMAKE_HOST_WIN32)
        execute_process (
            COMMAND ${CMAKE_COMMAND} -E remove_directory archives
            COMMAND ${CMAKE_COMMAND} -E echo "Merging all archives into a single static library using ${AR}"
        )
        foreach (ARCHIVE ${ARCHIVES})
            # Merge per library because Window cmd shell does not handle long argument list
            execute_process (COMMAND ${CMAKE_COMMAND} -E make_directory archives)
            execute_process (COMMAND ${CMAKE_AR} x ${ARCHIVE})
            file (WRITE merge.bat "\\\"${CMAKE_AR}\\\" q \\\"${URHO3D_TARGET_FILE}\\\" ")
            foreach (ARCHIVE ${ARCHIVES})
                file(APPEND merge.bat "${ARCHIVE} ")
            endforeach ()
            execute_process (COMMAND ${CMAKE_CURRENT_BINARY_DIR}/merge.bat WORKING_DIRECTORY archives)
            execute_process (COMMAND ${CMAKE_COMMAND} -E remove_directory archives)
        endforeach ()
        execute_process (COMMAND ${CMAKE_RANLIB} ${URHO3D_TARGET_FILE})
    else ()
        execute_process (
            COMMAND ${CMAKE_COMMAND} -E remove_directory archives
            COMMAND ${CMAKE_COMMAND} -E make_directory archives
        )
        foreach (ARCHIVE ${ARCHIVES})
            execute_process (COMMAND ${CMAKE_AR} x ${ARCHIVE} WORKING_DIRECTORY archives)
        endforeach ()
        execute_process (COMMAND ${CMAKE_AR} q ${URHO3D_TARGET_FILE} `ls -1` WORKING_DIRECTORY archives)
        execute_process (
            COMMAND ${CMAKE_RANLIB} ${URHO3D_TARGET_FILE}
            COMMAND ${CMAKE_COMMAND} -E remove_directory archives
        )
    endif ()
elseif (MSVC)
    execute_process (
        COMMAND ${CMAKE_COMMAND} -E rename ${URHO3D_TARGET_FILE} ${URHO3D_TARGET_FILE}.engine
        COMMAND lib.exe /OUT:${URHO3D_TARGET_FILE} ${URHO3D_TARGET_FILE}.engine ${ARCHIVES}
    )
    execute_process (COMMAND ${CMAKE_COMMAND} -E remove ${URHO3D_TARGET_FILE}.engine)
else ()
    # GCC ar does not take archives directly as input like Apple libtool, however, it can be scripted to do so
    execute_process (COMMAND ${CMAKE_COMMAND} -E rename ${URHO3D_TARGET_FILE} ${URHO3D_TARGET_FILE}.engine)
    file(WRITE script.ar "CREATE ${URHO3D_TARGET_FILE}\n")
    file(APPEND script.ar "ADDLIB ${URHO3D_TARGET_FILE}.engine\n")
    foreach (ARCHIVE ${ARCHIVES})
        file(APPEND script.ar "ADDLIB ${ARCHIVE}\n")
    endforeach ()
    file (APPEND script.ar "SAVE\n")
    file (APPEND script.ar "END\n")
    execute_process (COMMAND ${CMAKE_AR} -M INPUT_FILE ${CMAKE_CURRENT_BINARY_DIR}/script.ar)
    execute_process (COMMAND ${CMAKE_COMMAND} -E remove ${URHO3D_TARGET_FILE}.engine script.ar)
endif ()
